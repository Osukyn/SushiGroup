name: Deployment

on:
  push:
    branches:
      - develop
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm install
      - run: npm install -g @angular/cli > /dev/null
      - run: ng build

      - name: copy files to prod server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "./dist/sushi-group/"
          target: "/var/www/sushi.lnicolas.fr/public/"
          rm: true
          strip_components: 3

  deploy_node:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: cd server; npm install

      - name: Build Node server
        run: cd server; npm run build

      - name: Copy built server files and docker-compose file to production server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: |
            ./server/dist/
            ./server/docker-compose.yml
          target: "/var/www/sushi.lnicolas.fr/server/"
          rm: true

      - name: Start MongoDB Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            screen -X -S mongo quit
            screen -S mongo -dm bash -c "cd /var/www/sushi.lnicolas.fr/server; docker-compose up"

      - name: Start Node server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            screen -X -S node quit
            screen -S node -dm bash -c "cd /var/www/sushi.lnicolas.fr/server; node index.js"
